To filter data, group by question type, and show correct and wrong scores by question type in Power Apps, you can use a combination of `Filter`, `GroupBy`, `AddColumns`, and `Sum` functions. Here's an approach to achieve this:

### Assumptions:
- You have a data source named `QuizResponses` with columns: `QuestionType`, `IsCorrect` (where `true` represents correct answers and `false` represents wrong answers).
- You want to group by `QuestionType` and calculate the count of correct and wrong scores.

### Step-by-Step Code:

1. **Filter and Group Data:**
   - Use the `GroupBy` function to group the data by `QuestionType`.

2. **Calculate Correct and Wrong Scores:**
   - Use `AddColumns` to add columns for the count of correct and wrong answers.

Here's the complete code:

```PowerApps
// Step 1: Group data by QuestionType
ClearCollect(
    GroupedData,
    AddColumns(
        GroupBy(
            QuizResponses,
            "QuestionType",
            "GroupedItems"
        ),
        "CorrectScore",
        Sum(Filter(GroupedItems, IsCorrect = true), 1),
        "WrongScore",
        Sum(Filter(GroupedItems, IsCorrect = false), 1)
    )
)
```

### Explanation:
- **`GroupBy(QuizResponses, "QuestionType", "GroupedItems")`**: Groups the `QuizResponses` table by `QuestionType` and stores the grouped records in `GroupedItems`.
- **`AddColumns(...)`**: Adds new columns to calculate the correct and wrong scores.
- **`Sum(Filter(GroupedItems, IsCorrect = true), 1)`**: Sums the count of correct answers within each group.
- **`Sum(Filter(GroupedItems, IsCorrect = false), 1)`**: Sums the count of wrong answers within each group.

This approach will create a collection (`GroupedData`) that shows the `QuestionType` along with `CorrectScore` and `WrongScore` for each question type, which you can then display in a gallery or any other control in Power Apps.


To get the correct and wrong answers marks by question types in Power Apps using Power FX, you can use a combination of `Filter`, `Sum`, and `GroupBy` functions to process the data. Assuming you have a SharePoint list or a collection (`Responses`) that contains user responses with the fields `UserID`, `QuestionType`, `IsCorrect` (boolean indicating if the answer is correct), and `Marks`, here is a sample Power FX code:

### 1. Grouping Responses by Question Type
First, group the responses by `QuestionType`:

```PowerFx
// Group responses by QuestionType
ClearCollect(
    GroupedResponses,
    GroupBy(
        Responses,
        "QuestionType",
        "QuestionData"
    )
);
```

### 2. Calculate Correct and Wrong Marks for Each Group
For each grouped question type, calculate the marks for correct and wrong answers:

```PowerFx
// Calculate correct and wrong marks for each question type
ClearCollect(
    QuestionMarksSummary,
    AddColumns(
        GroupedResponses,
        "CorrectMarks",
        Sum(
            Filter(
                QuestionData,
                IsCorrect = true
            ),
            Marks
        ),
        "WrongMarks",
        Sum(
            Filter(
                QuestionData,
                IsCorrect = false
            ),
            Marks
        )
    )
);
```

### Explanation:
- `GroupBy` groups the responses by `QuestionType`.
- `AddColumns` is used to add `CorrectMarks` and `WrongMarks` for each group.
- `Sum` calculates the total marks for correct and wrong answers within each question type.

This code will create a collection `QuestionMarksSummary` with each question type and the corresponding marks for correct and wrong answers. Let me know if you need further adjustments or clarifications!


// Create a joined collection using outer join
ClearCollect(JoinedCollection,
    ForAll(
        Union(
            ForAll(AugCollection, {user_kid: user_kid, aug_score: aug_score, sep_score: LookUp(SepCollection, user_kid = AugCollection[@user_kid], sep_score)}),
            ForAll(SepCollection, {user_kid: user_kid, aug_score: LookUp(AugCollection, user_kid = SepCollection[@user_kid], aug_score), sep_score: sep_score})
        ),
        {
            user_kid: user_kid,
            aug_score: If(IsBlank(aug_score), 0, aug_score),
            sep_score: If(IsBlank(sep_score), 0, sep_score)
        }
    )
);