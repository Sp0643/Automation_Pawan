Hi there!

I'm happy to help you build your quiz app in PowerApps with the features you've described. Below is a detailed step-by-step approach, along with code snippets, to guide you through the process.


---

Overview

You want to:

1. Capture the release date and time, which should default to the current date and time.


2. Set the active duration for how long the quiz should be available.


3. Notify users in different time zones simultaneously when the quiz is released.


4. Store this information in a SharePoint (SP) list.


5. Display notifications to users when they open the app.




---

Step 1: Set Up the Admin Interface

1. Add a DatePicker Control

Control Name: dpReleaseDate

Purpose: Allows the admin to select the release date.

Default Value: Set to Today() to default to the current date.


2. Create a Custom TimePicker Control

Since there's no built-in TimePicker, we'll create one using dropdowns.

Hour Dropdown

Control Name: ddReleaseHour

Items Property: ["00", "01", ..., "23"] (24-hour format)

Default Selected Value: Set to Text(Hour(Now()), "00")


Minute Dropdown

Control Name: ddReleaseMinute

Items Property: ["00", "15", "30", "45"] or ["00"..."59"]

Default Selected Value: Set to Text(Minute(Now()), "00")



3. Input for Active Duration

Control Name: txtActiveDuration

Control Type: Text Input (Number mode)

Purpose: Admin specifies how many hours the quiz should be active.

Default Value: Could be set to a standard duration like 1.


4. Submit Button

Control Name: btnSubmitQuiz

Purpose: Saves the quiz release information to the SP list.



---

Step 2: Capture and Store Release Date and Time

OnSelect Property of btnSubmitQuiz:

// Step 2.1: Combine Date and Time into a single DateTime value
Set(
    varReleaseDateTimeLocal,
    DateAdd(
        DateAdd(dpReleaseDate.SelectedDate, Value(ddReleaseHour.Selected.Value), Hours),
        Value(ddReleaseMinute.Selected.Value),
        Minutes
    )
);

// Step 2.2: Convert Local DateTime to UTC
Set(
    varReleaseDateTimeUTC,
    DateAdd(varReleaseDateTimeLocal, -TimeZoneOffset(), Minutes)
);

// Step 2.3: Capture the Active Duration
Set(
    varActiveDurationHours,
    Value(txtActiveDuration.Text)
);

// Step 2.4: Store the information in the SharePoint list
Patch(
    QuizList, // Replace with your SP list name
    Defaults(QuizList),
    {
        Title: "Quiz Title", // Adjust as necessary
        ReleaseDateTimeUTC: varReleaseDateTimeUTC,
        ActiveDurationHours: varActiveDurationHours
    }
);

// Step 2.5: Provide confirmation to the admin
Notify("Quiz has been scheduled successfully!", NotificationType.Success);

Explanation:

varReleaseDateTimeLocal: Combines selected date and time.

TimeZoneOffset(): Returns the offset in minutes between the user's local time zone and UTC.

varReleaseDateTimeUTC: Converts local time to UTC for consistent storage.

Patch Function: Saves data to the SP list with fields:

Title

ReleaseDateTimeUTC

ActiveDurationHours




---

Step 3: Notify Users When They Open the App

OnStart Property of the App or OnVisible Property of the Main Screen:

// Step 3.1: Retrieve active quizzes from the SP list
ClearCollect(
    colActiveQuizzes,
    Filter(
        QuizList,
        ReleaseDateTimeUTC <= Now(),
        DateAdd(ReleaseDateTimeUTC, ActiveDurationHours, Hours) >= Now()
    )
);

// Step 3.2: If there's an active quiz, notify the user
If(
    CountRows(colActiveQuizzes) > 0,
    Notify("A new quiz is available! Please participate.", NotificationType.Success)
);

Explanation:

Now(): Returns the current UTC DateTime.

colActiveQuizzes: A collection of quizzes that are currently active.

Notify Function: Alerts the user if there's an active quiz.



---

Step 4: Adjust for User Time Zones (If Displaying Local Times)

If you need to display the quiz release time in the user's local time zone:

// For each quiz in colActiveQuizzes
ForAll(
    colActiveQuizzes,
    Collect(
        colQuizzesWithLocalTime,
        {
            Title: Title,
            ReleaseDateTimeLocal: DateAdd(ReleaseDateTimeUTC, TimeZoneOffset(), Minutes),
            ActiveDurationHours: ActiveDurationHours
        }
    )
);

Explanation:

DateAdd with TimeZoneOffset(): Converts UTC time to the user's local time.



---

Step 5: Create the Quiz Interface

This step involves creating the quiz questions and interface, which can be customized as needed.

Quiz Screen: Design a screen to display quiz questions.

Submit Answers Button: Collects and stores user responses.



---

Step 6: Additional Considerations

6.1: SharePoint List Setup

Ensure your SharePoint list (QuizList) has the following columns:

Title: Single line of text.

ReleaseDateTimeUTC: Date and Time (set to display as UTC).

ActiveDurationHours: Number.


6.2: Validations

Add validations to prevent incorrect data entry.

Release Date and Time Validation:

If(
    varReleaseDateTimeLocal < Now(),
    Notify("Release date and time cannot be in the past.", NotificationType.Error);
    Exit()
);

Active Duration Validation:

If(
    varActiveDurationHours <= 0,
    Notify("Active duration must be greater than zero.", NotificationType.Error);
    Exit()
);


6.3: User Permissions

Ensure users have the necessary permissions to read from the SharePoint list.

Use appropriate security roles to restrict access to admin functions.



---

Step 7: Testing

Admin Testing:

Schedule a quiz and verify that it's stored correctly in the SP list.

Check that the release DateTime is stored in UTC.


User Testing:

Open the app as a user in different time zones.

Verify that the notification appears when the quiz is active.

Ensure that the quiz deactivates after the specified duration.




---

Summary

By following these steps, you will:

Capture the release date and time, defaulting to 'now' if needed.

Allow the admin to set the active duration for the quiz.

Notify all users simultaneously, regardless of their time zones.

Store and retrieve quiz information from a SharePoint list.

Provide a seamless experience for users when they open the app.



---

Feel free to ask if you need further clarification or assistance with any part of this implementation. Good luck with your quiz app!

